#  stub => ""
  ==> [String]

#  stub => []
  ==> [Array]

#  stub => $_
  ==> [String]

#  stub => 0
  ==> [Fixnum]

#  stub => 0.0
  ==> [Float]

#  stub => 0, 1
  ==> [Fixnum]

#  stub => 0 or false
  ==> [Fixnum, FalseClass]

#  stub => 0 or nil
  ==> [Fixnum, NilClass]

#  stub => 100, "b" => 200 }
  ==> [Fixnum]

#  stub => 100, "b" => 200 }     #=> {"a"=>100, "b"=>200}
  ==> [Hash]

#  stub => 100, "b" => 200 }   #=> {"a"=>100, "b"=>200}
  ==> [Hash]

#  stub => 100, "b" => 200]   #=> {"a"=>100, "b"=>200}
  ==> [Hash]

#  stub => 100, "b" => 200, "c" => 300 }
  ==> [Fixnum]

#  stub => 100, c => 300 }
  ==> [Fixnum]

#  stub => -1, 0, 1
  ==> [Fixnum]

#  stub => -1, 0, +1
  ==> [Fixnum]

#  stub => -1, 0, +1, or nil
  ==> [Fixnum, NilClass]

#  stub => [[1,1],[1,2],[2,1],[2,2]]
  ==> [Array]

#  stub => [[1],[2]]
  ==> [Array]

#  stub => [1, 2]
  ==> [Array]

#  stub => [1, 2, 3]
  ==> [Array]

#  stub => 12345
  ==> [Fixnum]

#  stub => 123 Maple, Anytown NC
  ==> []

#  stub => [[1,3,5],[1,3,6],[1,4,5],[1,4,6],
  ==> [Fixnum]

#  stub => [[1,4],[1,5],[2,4],[2,5],[3,4],[3,5]]
  ==> [Array]

#  stub => 1, "c" => 2 }
  ==> [Fixnum]

#  stub => 1, "c" => 2, 7 => 35 }
  ==> [Fixnum]

#  stub => 1, "d" => 2, "f" => 35 }
  ==> [Fixnum]

#  stub => 2
  ==> [Fixnum]

#  stub => 20, "b" => 30, "c" => 10  }
  ==> [Fixnum]

#  stub => 254, "c" => 300 }
  ==> [Fixnum]

#  stub => 3
  ==> [Fixnum]

#  stub => 300, "d" => 400 })   #=> {"c"=>300, "d"=>400}
  ==> [Hash]

#  stub => [3, 4, 5, 0]
  ==> [Array]

#  stub => 35, "c" => 2, "a" => 1 }
  ==> [Fixnum]

#  stub => 4
  ==> [Fixnum]

#  stub => [4, 5, 0]
  ==> [Array]

#  stub => "a", 2 => "b", 3 => "c" }
  ==> [String]

#  stub => a_class
  ==> [Class]

#  stub => aDir
  ==> [Dir]

#  stub => a_hash
  ==> [Hash]

#  stub => aHash
  ==> [Hash]

#  stub => a_klass
  ==> [Class]

#  stub => an_array
  ==> [Array]

#  stub => anArray
  ==> [Array]

#  stub => anEnumerator
  ==> [Enumeration]

#  stub => anIO
  ==> [IO]

#  stub => anObject
  ==> [Object]

#  stub => a_proc
  ==> [Proc]

#  stub => array
  ==> [Array]

#  stub => array  or  nil
  ==> [Array, NilClass]

#  stub => array or nil
  ==> [Array, NilClass]

#  stub => a_str
  ==> [String]

#  stub => aStructTms
  ==> [Struct::Tms]

#  stub => "b"
  ==> [String]

#  stub => binding
  ==> [Binding]

#  stub => bool
  ==> [TrueClass]

#  stub => boolean
  ==> [TrueClass]

#  stub => class
  ==> [Class]

#  stub => class_or_module
  ==> [Class]

#  stub => [cur_limit, max_limit]
  ==> [Array]

#  stub => detail
  ==> []

#  stub => dir
  ==> [Dir]

#  stub => e
  ==> [Enumeration]

#  stub => exception
  ==> [Exception]

#  stub => false
  ==> [FalseClass]

#  stub => "false"
  ==> [String]

#  stub => "feline", "dog" => "canine", "cow" => "bovine" }
  ==> [String]

#  stub => file
  ==> [File]

#  stub => fixnum
  ==> [Fixnum]

#  stub => fixnum, bignum
  ==> [Fixnum, Bignum]

#  stub => fixnum or nil
  ==> [Fixnum, NilClass]

#  stub => float
  ==> [Float]

#  stub => Float
  ==> [Float]

#  stub => flt
  ==> [Float]

#  stub => :foo
  ==> [Symbol]

#  stub => [ fraction, exponent ]
  ==> [Array]

#  stub => hash
  ==> [Hash]

#  stub => [head, sep, tail]
  ==> [Array]

#  stub => hsh
  ==> [Hash]

#  stub => instance_method(:do_a),
  ==> []

#  stub => instance_method(:do_d),
  ==> []

#  stub => instance_method(:do_e),
  ==> []

#  stub => instance_method(:do_v)
  ==> []

#  stub => int
  ==> [Integer]

#  stub => integer
  ==> [Integer]

#  stub => Integer
  ==> [Integer]

#  stub => integer or nil
  ==> [Integer, NilClass]

#  stub => Integer or nil
  ==> [Integer, NilClass]

#  stub => int or nil
  ==> [Integer, NilClass]

#  stub => io
  ==> [IO]

#  stub => io or nil
  ==> [IO, NilClass]

#  stub => ios
  ==> [IO]

#  stub => Joe Smith
  ==> []

#  stub => key
  ==> []

#  stub => matchdata
  ==> [MatchData]

#  stub => matchdata or nil
  ==> [MatchData, NilClass]

#  stub => method
  ==> [Method]

#  stub => [min, max]
  ==> [Array]

#  stub => [min,max]
  ==> [Array]

#  stub => mod
  ==> [Module]

#  stub => name_error
  ==> [NameError]

#  stub => new_method
  ==> [UnboundMethod]

#  stub => new_regexp
  ==> [Regexp]

#  stub => new_str
  ==> [String]

#  stub => new_str or nil
  ==> [String, NilClass]

#  stub => new_time
  ==> [Time]

#  stub => nil
  ==> [NilClass]

#  stub => "nil"
  ==> [String]

#  stub => no_method_error
  ==> [NoMethodError]

#  stub => num
  ==> [Numeric]

#  stub => number
  ==> [Numeric]

#  stub => numeric
  ==> [Numeric]

#  stub => Numeric
  ==> [Numeric]

#  stub => numeric_result
  ==> [Numeric]

#  stub => num or nil
  ==> [Numeric, NilClass]

#  stub => num or numeric
  ==> [Numeric]

#  stub => obj
  ==> [Object]

#  stub => !obj
  ==> [FalseClass]

#  stub => object
  ==> [Object]

#  stub => obj or nil
  ==> [Object, NilClass]

#  stub => old_seed
  ==> [Numeric]

#  stub => $_ or nil
  ==> [String, NilClass]

#  stub => other_big
  ==> [Bignum]

#  stub => outbuf
  ==> [String]

#  stub => [ [pid1,status1], ...]
  ==> [Array]

#  stub => [pid, status]
  ==> [Array]

#  stub => prc
  ==> [Proc]

#  stub => proc
  ==> [Proc]

#  stub => range
  ==> [Range]

#  stub => regexp
  ==> [Regexp]

#  stub => result
  ==> []

#  stub => rng
  ==> [Range]

#  stub => self
  ==> []

#  stub => self or nil
  ==> [NilClass]

#  stub => stat
  ==> [File::Stat]

#  stub => str
  ==> [String]

#  stub => string
  ==> [String]

#  stub => string, buffer, or nil
  ==> [String, NilClass]

#  stub => string, false or nil
  ==> [String, FalseClass, NilClass]

#  stub => string or nil
  ==> [String, NilClass]

#  stub => String or nil
  ==> [String, NilClass]

#  stub => str or nil
  ==> [String, NilClass]

#  stub => struct
  ==> [Struct]

#  stub => StructClass
  ==> [StructClass]

#  stub => struct_tms
  ==> [Struct::Tms]

#  stub => sym
  ==> [Symbol]

#  stub => symbol
  ==> [Symbol]

#  stub => system_call_error_subclass
  ==> [SystemCallErrorSubclass]

#  stub => system_exit
  ==> [SystemExit]

#  stub => thgrp
  ==> [ThreadGroup]

#  stub => thgrp or nil
  ==> [ThreadGroup, NilClass]

#  stub => thr
  ==> [Thread]

#  stub => thread
  ==> [Thread]

#  stub => time
  ==> [Time]

#  stub => true
  ==> [TrueClass]

#  stub => "true"
  ==> [String]

#  stub => [ true_array, false_array ]
  ==> [Array]

#  stub => true, false or nil
  ==> [TrueClass, FalseClass, NilClass]

#  stub => true, false, or nil
  ==> [TrueClass, FalseClass, NilClass]

#  stub => (true or false)
  ==> []

#  stub => true or false
  ==> [TrueClass, FalseClass]

#  stub => true or false    (obsolete)
  ==> [TrueClass]

#  stub => unbound_method
  ==> [UnboundMethod]

#  stub => value
  ==> []

#  stub => #{value}") }
  ==> []

#  stub => 100, "m" => 100, "y" => 300, "d" => 200, "a" => 0 }
  ==> [Fixnum]

#  stub => 300, "a" => 100, "d" => 400, "c" => 300  }
  ==> [Fixnum]

#  stub => 100, "a" => 200, "v" => 300, "e" => 400 }
  ==> [Fixnum]

#  stub => 100, "b" => 200, "c" => 300, "d" => 400 }
  ==> [Fixnum]

